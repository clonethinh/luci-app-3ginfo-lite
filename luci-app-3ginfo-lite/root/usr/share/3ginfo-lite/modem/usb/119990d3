# Sierra Wireless EM9190
# Phiên bản đã được cập nhật và sửa lỗi, bổ sung chi tiết 5G

# Lấy thông tin trạng thái modem
O=$(sms_tool -d $DEVICE at "at!gstatus?")

# Lấy thông tin Model và Firmware
MODEL=$(sms_tool -d "$DEVICE" at "AT+CGMM" | sed -n '2p' | tr -d '\r\n')
FW=$(sms_tool -d "$DEVICE" at "AT+CGMR" | sed -n '2p' | tr -d '\r\n')

# Xử lý nhiệt độ
T=$(echo "$O" | awk -F: '/Temperature:/ {print $3}' | tr -d '\r\n' | xargs)
[ -n "$T" ] && TEMP="$T °C"

# Xác định chế độ mạng
T=$(echo "$O" | awk '/^System mode:/ {print $3}')
case $T in
    "LTE") MODE="LTE" ;;
    "ENDC") MODE="5G NSA" ;;
esac

# Xử lý TAC (Tracking Area Code)
T=$(echo "$O" | awk '/.*TAC:/ {print $6}')
if [ -n "$T" ]; then
    T_DEC=$(printf "%d" "0x$T")
    T_HEX="$T"
fi

# --- XỬ LÝ TÍN HIỆU (PHIÊN BẢN ĐÃ SỬA LỖI & CHÍNH XÁC) ---

# RSSI: Lấy giá trị của antenna chính (PCC RxM RSSI) và dọn dẹp
T=$(echo "$O" | awk -F: '/PCC RxM RSSI/ {print $2; exit}')
[ -n "$T" ] && RSSI=$(echo "$T" | tr -d ',' | xargs)

# RSRP: Lấy giá trị của antenna chính (PCC RxM RSRP) và dọn dẹp
T=$(echo "$O" | awk -F: '/PCC RxM RSRP/ {print $2; exit}')
[ -n "$T" ] && RSRP=$(echo "$T" | tr -d ',' | xargs)

# RSRQ: Tìm dòng chứa "PCC RSRQ" và lấy giá trị
T=$(echo "$O" | awk -F: '/PCC RSRQ/ {print $2}')
[ -n "$T" ] && RSRQ=$(echo "$T" | xargs)

# SINR: Tìm dòng chứa "PCC SINR" và lấy giá trị
T=$(echo "$O" | awk -F: '/PCC SINR/ {print $2}')
[ -n "$T" ] && SINR=$(echo "$T" | xargs)

# --- KẾT THÚC KHỐI XỬ LÝ TÍN HIỆU ---

# Xử lý băng tần LTE
T=$(echo "$O" | awk '/^LTE band:/ {print $3}')
if [ -n "$T" ]; then
    T1=$(echo "$O" | awk '/^LTE band:/ {print $6}')
    PBAND="$(band4g ${T/B/}) @${T1} MHz"
    MODE="$MODE $(band4g ${T/B/})"
fi

# Xử lý SCC1 (Secondary Component Carrier 1)
T=$(echo "$O" | awk -F: '/^LTE SCC1 state:.*ACTIVE/ {print $3}')
if [ -n "$T" ]; then
    T1=$(echo "$O" | awk '/^LTE SCC1 bw/ {print $5}')
    if [ -n "$T1" ]; then
        S1BAND="$(band4g ${T/B/}) @${T1} MHz"
    else
        S1BAND="$(band4g ${T/B/})"
    fi
    MODE="${MODE/LTE/LTE-A} + $(band4g ${T/B/})"
fi

# Xử lý SCC2
T=$(echo "$O" | awk -F: '/^LTE SCC2 state:.*ACTIVE/ {print $3}')
if [ -n "$T" ]; then
    T1=$(echo "$O" | awk '/^LTE SCC2 bw/ {print $5}')
    if [ -n "$T1" ]; then
        S2BAND="$(band4g ${T/B/}) @${T1} MHz"
    else
        S2BAND="$(band4g ${T/B/})"
    fi
    MODE="$MODE + $(band4g ${T/B/})"
fi

# Xử lý SCC3
T=$(echo "$O" | awk -F: '/^LTE SCC3 state:.*ACTIVE/ {print $3}')
if [ -n "$T" ]; then
    T1=$(echo "$O" | awk '/^LTE SCC3 bw/ {print $5}')
    if [ -n "$T1" ]; then
        S3BAND="$(band4g ${T/B/}) @${T1} MHz"
    else
        S3BAND="$(band4g ${T/B/})"
    fi
    MODE="$MODE + $(band4g ${T/B/})"
fi

# Xử lý băng tần và các thông số tín hiệu 5G NR
T=$(echo "$O" | awk '/^SCC. NR5G band:/ {print $4}')
if [ -n "$T" ] && [ "$T" != "---" ]; then
    # Thêm băng tần 5G vào chế độ hiển thị
    MODE="$MODE + $(band5g ${T/n/})"
    T1=$(echo "$O" | awk '/^SCC.*SCC. NR5G bw:/ {print $8}')
    
    # ---- [PHẦN XỬ LÝ THÔNG TIN 5G ĐÃ ĐƯỢC BỔ SUNG] ----
    # Lấy các thông số tín hiệu của 5G NR.
    # Nếu tìm thấy, sẽ GHI ĐÈ lên các giá trị của LTE đã lấy ở trên.
    # Điều này đảm bảo giao diện luôn hiển thị thông số quan trọng nhất.
    
    # Lấy NR5G RSRP
    T_NR_RSRP=$(echo "$O" | awk -F: '/SCC. NR5G RSRP/ {print $2}')
    [ -n "$T_NR_RSRP" ] && RSRP=$(echo "$T_NR_RSRP" | xargs)
    
    # Lấy NR5G RSRQ
    T_NR_RSRQ=$(echo "$O" | awk -F: '/SCC. NR5G RSRQ/ {print $2}')
    [ -n "$T_NR_RSRQ" ] && RSRQ=$(echo "$T_NR_RSRQ" | xargs)
    
    # Lấy NR5G SINR
    T_NR_SINR=$(echo "$O" | awk -F: '/SCC. NR5G SINR/ {print $2}')
    [ -n "$T_NR_SINR" ] && SINR=$(echo "$T_NR_SINR" | xargs)
    
fi

# Chuẩn hóa chế độ mạng
MODE=$(echo "$MODE" | sed 's/LTE-A/LTE-A |/' | sed 's/ + / + /g')

# Xác định giao thức modem (phiên bản ổn định hơn)
PROTO_INFO=$(awk '/Vendor=1199 ProdID=90d3/{f=1} f && /Driver=/{print; f=0}' /sys/kernel/debug/usb/devices)
if [[ "$PROTO_INFO" == *"Driver=qmi_wwan"* ]]; then
    PROTO="qmi"
elif [[ "$PROTO_INFO" == *"Driver=cdc_mbim"* ]]; then
    PROTO="mbim"
elif [[ "$PROTO_INFO" == *"Driver=cdc_ether"* ]]; then
    PROTO="ecm"
fi
